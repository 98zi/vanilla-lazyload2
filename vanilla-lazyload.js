(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?(module.exports=factory()):typeof define==='function'&&define.amd?define(factory):((global=typeof globalThis!=='undefined'?globalThis:global||self),(global.LazyLoad=factory()))})(this,()=>{function _extends(){_extends=Object.assign||function(target){for(let i=1;i<arguments.length;i++){const source=arguments[i];for(const key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}const runningOnBrowser=typeof window!=='undefined';const isBot=(runningOnBrowser&&!('onscroll'in window))||(typeof navigator!=='undefined'&&/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));const supportsIntersectionObserver=runningOnBrowser&&'IntersectionObserver'in window;const supportsClassList=runningOnBrowser&&'classList'in document.createElement('p');const isHiDpi=runningOnBrowser&&window.devicePixelRatio>1;const defaultSettings={elements_selector:'.lazy',container:isBot||runningOnBrowser?document:null,threshold:300,thresholds:null,data_src:'src',data_srcset:'srcset',data_sizes:'sizes',data_bg:'bg',data_bg_hidpi:'bg-hidpi',data_bg_multi:'bg-multi',data_bg_multi_hidpi:'bg-multi-hidpi',data_poster:'poster',class_applied:'applied',class_loading:'loading',class_loaded:'loaded',class_error:'error',class_entered:'entered',class_exited:'exited',unobserve_completed:true,unobserve_entered:false,cancel_on_exit:false,callback_enter:null,callback_exit:null,callback_applied:null,callback_loading:null,callback_loaded:null,callback_error:null,callback_finish:null,callback_cancel:null,use_native:false,};const getExtendedSettings=function getExtendedSettings(customSettings){return{...defaultSettings,...customSettings}};const createInstance=function createInstance(classObj,options){let event;const eventString='LazyLoad::Initialized';const instance=new classObj(options);try{event=new CustomEvent(eventString,{detail:{instance,},})}catch(err){event=document.createEvent('CustomEvent');event.initCustomEvent(eventString,false,false,{instance,})}window.dispatchEvent(event)};const autoInitialize=function autoInitialize(classObj,options){if(!options){return}if(!options.length){createInstance(classObj,options)}else{for(var i=0,optionsItem;(optionsItem=options[i]);i+=1){createInstance(classObj,optionsItem)}}};const SRC='src';const SRCSET='srcset';const SIZES='sizes';const POSTER='poster';const ORIGINALS='llOriginalAttrs';const statusLoading='loading';const statusLoaded='loaded';const statusApplied='applied';const statusEntered='entered';const statusError='error';const statusNative='native';const dataPrefix='data-';const statusDataName='ll-status';const getData=function getData(element,attribute){return element.getAttribute(dataPrefix+attribute)};const setData=function setData(element,attribute,value){const attrName=dataPrefix+attribute;if(value===null){element.removeAttribute(attrName);return}element.setAttribute(attrName,value)};const getStatus=function getStatus(element){return getData(element,statusDataName)};const setStatus=function setStatus(element,status){return setData(element,statusDataName,status)};const resetStatus=function resetStatus(element){return setStatus(element,null)};const hasEmptyStatus=function hasEmptyStatus(element){return getStatus(element)===null};const hasStatusLoading=function hasStatusLoading(element){return getStatus(element)===statusLoading};const hasStatusError=function hasStatusError(element){return getStatus(element)===statusError};const hasStatusNative=function hasStatusNative(element){return getStatus(element)===statusNative};const statusesAfterLoading=[statusLoading,statusLoaded,statusApplied,statusError];const hadStartedLoading=function hadStartedLoading(element){return statusesAfterLoading.indexOf(getStatus(element))>=0};const safeCallback=function safeCallback(callback,arg1,arg2,arg3){if(!callback){return}if(arg3!==undefined){callback(arg1,arg2,arg3);return}if(arg2!==undefined){callback(arg1,arg2);return}callback(arg1)};const addClass=function addClass(element,className){if(supportsClassList){element.classList.add(className);return}element.className+=(element.className?' ':'')+className};const removeClass=function removeClass(element,className){if(supportsClassList){element.classList.remove(className);return}element.className=element.className.replace(new RegExp(`(^|\\s+)${className}(\\s+|$)`),' ').replace(/^\s+/,'').replace(/\s+$/,'')};const addTempImage=function addTempImage(element){element.llTempImage=document.createElement('IMG')};const deleteTempImage=function deleteTempImage(element){delete element.llTempImage};const getTempImage=function getTempImage(element){return element.llTempImage};const unobserve=function unobserve(element,instance){if(!instance)return;const observer=instance._observer;if(!observer)return;observer.unobserve(element)};const resetObserver=function resetObserver(observer){observer.disconnect()};const unobserveEntered=function unobserveEntered(element,settings,instance){if(settings.unobserve_entered)unobserve(element,instance)};const updateLoadingCount=function updateLoadingCount(instance,delta){if(!instance)return;instance.loadingCount+=delta};const decreaseToLoadCount=function decreaseToLoadCount(instance){if(!instance)return;instance.toLoadCount-=1};const setToLoadCount=function setToLoadCount(instance,value){if(!instance)return;instance.toLoadCount=value};const isSomethingLoading=function isSomethingLoading(instance){return instance.loadingCount>0};const haveElementsToLoad=function haveElementsToLoad(instance){return instance.toLoadCount>0};const getSourceTags=function getSourceTags(parentTag){const sourceTags=[];for(var i=0,childTag;(childTag=parentTag.children[i]);i+=1){if(childTag.tagName==='SOURCE'){sourceTags.push(childTag)}}return sourceTags};const forEachPictureSource=function forEachPictureSource(element,fn){const parent=element.parentNode;if(!parent||parent.tagName!=='PICTURE'){return}const sourceTags=getSourceTags(parent);sourceTags.forEach(fn)};const forEachVideoSource=function forEachVideoSource(element,fn){const sourceTags=getSourceTags(element);sourceTags.forEach(fn)};const attrsSrc=[SRC];const attrsSrcPoster=[SRC,POSTER];const attrsSrcSrcsetSizes=[SRC,SRCSET,SIZES];const hasOriginalAttrs=function hasOriginalAttrs(element){return!!element[ORIGINALS]};const getOriginalAttrs=function getOriginalAttrs(element){return element[ORIGINALS]};const deleteOriginalAttrs=function deleteOriginalAttrs(element){return delete element[ORIGINALS]};const setOriginalsObject=function setOriginalsObject(element,attributes){if(hasOriginalAttrs(element)){return}const originals={};attributes.forEach((attribute)=>{originals[attribute]=element.getAttribute(attribute)});element[ORIGINALS]=originals};const saveOriginalBackgroundStyle=function saveOriginalBackgroundStyle(element){if(hasOriginalAttrs(element)){return}element[ORIGINALS]={backgroundImage:element.style.backgroundImage,}};const setOrResetAttribute=function setOrResetAttribute(element,attrName,value){if(!value){element.removeAttribute(attrName);return}element.setAttribute(attrName,value)};const restoreOriginalAttrs=function restoreOriginalAttrs(element,attributes){if(!hasOriginalAttrs(element)){return}const originals=getOriginalAttrs(element);attributes.forEach((attribute)=>{setOrResetAttribute(element,attribute,originals[attribute])})};const restoreOriginalBgImage=function restoreOriginalBgImage(element){if(!hasOriginalAttrs(element)){return}const originals=getOriginalAttrs(element);element.style.backgroundImage=originals.backgroundImage};const manageApplied=function manageApplied(element,settings,instance){addClass(element,settings.class_applied);setStatus(element,statusApplied);if(!instance)return;if(settings.unobserve_completed){unobserve(element,settings)}safeCallback(settings.callback_applied,element,instance)};const manageLoading=function manageLoading(element,settings,instance){addClass(element,settings.class_loading);setStatus(element,statusLoading);if(!instance)return;updateLoadingCount(instance,+1);safeCallback(settings.callback_loading,element,instance)};const setAttributeIfValue=function setAttributeIfValue(element,attrName,value){if(!value){return}if(attrName==='src'&&getData(element,SIZES)){const sizesArr=getData(element,SIZES).split(',');const SRCArr=(getData(element,SRC));const windowWidth=window.innerWidth;for(let sizesIndex=0;sizesIndex<sizesArr.length;sizesIndex++){if(windowWidth<=Number(sizesArr[sizesIndex].split(' ')[1].replace('w',''))){value=SRCArr.replace(/\?size.*?$/,'\?size='+sizesArr[sizesIndex].split(' ')[0]);break}}}element.setAttribute(attrName,value)};const setImageAttributes=function setImageAttributes(element,settings){setAttributeIfValue(element,SRCSET,getData(element,settings.data_srcset));setAttributeIfValue(element,SRC,getData(element,settings.data_src))};const setSourcesImg=function setSourcesImg(imgEl,settings){forEachPictureSource(imgEl,(sourceTag)=>{setOriginalsObject(sourceTag,attrsSrcSrcsetSizes);setImageAttributes(sourceTag,settings)});setOriginalsObject(imgEl,attrsSrcSrcsetSizes);setImageAttributes(imgEl,settings)};const setSourcesIframe=function setSourcesIframe(iframe,settings){setOriginalsObject(iframe,attrsSrc);setAttributeIfValue(iframe,SRC,getData(iframe,settings.data_src))};const setSourcesVideo=function setSourcesVideo(videoEl,settings){forEachVideoSource(videoEl,(sourceEl)=>{setOriginalsObject(sourceEl,attrsSrc);setAttributeIfValue(sourceEl,SRC,getData(sourceEl,settings.data_src))});setOriginalsObject(videoEl,attrsSrcPoster);setAttributeIfValue(videoEl,POSTER,getData(videoEl,settings.data_poster));setAttributeIfValue(videoEl,SRC,getData(videoEl,settings.data_src));videoEl.load()};const setBackground=function setBackground(element,settings,instance){const bg1xValue=getData(element,settings.data_bg);const bgHiDpiValue=getData(element,settings.data_bg_hidpi);const bgDataValue=isHiDpi&&bgHiDpiValue?bgHiDpiValue:bg1xValue;if(!bgDataValue)return;element.style.backgroundImage='url("'.concat(bgDataValue,'")');getTempImage(element).setAttribute(SRC,bgDataValue);manageLoading(element,settings,instance)};const setMultiBackground=function setMultiBackground(element,settings,instance){const bg1xValue=getData(element,settings.data_bg_multi);const bgHiDpiValue=getData(element,settings.data_bg_multi_hidpi);const bgDataValue=isHiDpi&&bgHiDpiValue?bgHiDpiValue:bg1xValue;if(!bgDataValue){return}element.style.backgroundImage=bgDataValue;manageApplied(element,settings,instance)};const setSourcesFunctions={IMG:setSourcesImg,IFRAME:setSourcesIframe,VIDEO:setSourcesVideo,};const setSourcesNative=function setSourcesNative(element,settings){const setSourcesFunction=setSourcesFunctions[element.tagName];if(!setSourcesFunction){return}setSourcesFunction(element,settings)};const setSources=function setSources(element,settings,instance){const setSourcesFunction=setSourcesFunctions[element.tagName];if(!setSourcesFunction){return}setSourcesFunction(element,settings);manageLoading(element,settings,instance)};const elementsWithLoadEvent=['IMG','IFRAME','VIDEO'];const hasLoadEvent=function hasLoadEvent(element){return elementsWithLoadEvent.indexOf(element.tagName)>-1};const checkFinish=function checkFinish(settings,instance){if(instance&&!isSomethingLoading(instance)&&!haveElementsToLoad(instance)){safeCallback(settings.callback_finish,instance)}};const addEventListener=function addEventListener(element,eventName,handler){element.addEventListener(eventName,handler);element.llEvLisnrs[eventName]=handler};const removeEventListener=function removeEventListener(element,eventName,handler){element.removeEventListener(eventName,handler)};const hasEventListeners=function hasEventListeners(element){return!!element.llEvLisnrs};const addEventListeners=function addEventListeners(element,loadHandler,errorHandler){if(!hasEventListeners(element))element.llEvLisnrs={};const loadEventName=element.tagName==='VIDEO'?'loadeddata':'load';addEventListener(element,loadEventName,loadHandler);addEventListener(element,'error',errorHandler)};const removeEventListeners=function removeEventListeners(element){if(!hasEventListeners(element)){return}const eventListeners=element.llEvLisnrs;for(const eventName in eventListeners){const handler=eventListeners[eventName];removeEventListener(element,eventName,handler)}delete element.llEvLisnrs};const doneHandler=function doneHandler(element,settings,instance){deleteTempImage(element);updateLoadingCount(instance,-1);decreaseToLoadCount(instance);removeClass(element,settings.class_loading);if(settings.unobserve_completed){unobserve(element,instance)}};const loadHandler=function loadHandler(event,element,settings,instance){const goingNative=hasStatusNative(element);doneHandler(element,settings,instance);addClass(element,settings.class_loaded);setStatus(element,statusLoaded);safeCallback(settings.callback_loaded,element,instance);if(!goingNative)checkFinish(settings,instance)};const errorHandler=function errorHandler(event,element,settings,instance){const goingNative=hasStatusNative(element);doneHandler(element,settings,instance);addClass(element,settings.class_error);setStatus(element,statusError);safeCallback(settings.callback_error,element,instance);if(!goingNative)checkFinish(settings,instance)};const addOneShotEventListeners=function addOneShotEventListeners(element,settings,instance){const elementToListenTo=getTempImage(element)||element;if(hasEventListeners(elementToListenTo)){return}const _loadHandler=function _loadHandler(event){loadHandler(event,element,settings,instance);removeEventListeners(elementToListenTo)};const _errorHandler=function _errorHandler(event){errorHandler(event,element,settings,instance);removeEventListeners(elementToListenTo)};addEventListeners(elementToListenTo,_loadHandler,_errorHandler)};const loadBackground=function loadBackground(element,settings,instance){addTempImage(element);addOneShotEventListeners(element,settings,instance);saveOriginalBackgroundStyle(element);setBackground(element,settings,instance);setMultiBackground(element,settings,instance)};const loadRegular=function loadRegular(element,settings,instance){addOneShotEventListeners(element,settings,instance);setSources(element,settings,instance)};const load=function load(element,settings,instance){if(hasLoadEvent(element)){loadRegular(element,settings,instance)}else{loadBackground(element,settings,instance)}};const loadNative=function loadNative(element,settings,instance){element.setAttribute('loading','lazy');addOneShotEventListeners(element,settings,instance);setSourcesNative(element,settings);setStatus(element,statusNative)};const removeImageAttributes=function removeImageAttributes(element){element.removeAttribute(SRC);element.removeAttribute(SRCSET);element.removeAttribute(SIZES)};const resetSourcesImg=function resetSourcesImg(element){forEachPictureSource(element,(sourceTag)=>{removeImageAttributes(sourceTag)});removeImageAttributes(element)};const restoreImg=function restoreImg(imgEl){forEachPictureSource(imgEl,(sourceEl)=>{restoreOriginalAttrs(sourceEl,attrsSrcSrcsetSizes)});restoreOriginalAttrs(imgEl,attrsSrcSrcsetSizes)};const restoreVideo=function restoreVideo(videoEl){forEachVideoSource(videoEl,(sourceEl)=>{restoreOriginalAttrs(sourceEl,attrsSrc)});restoreOriginalAttrs(videoEl,attrsSrcPoster);videoEl.load()};const restoreIframe=function restoreIframe(iframeEl){restoreOriginalAttrs(iframeEl,attrsSrc)};const restoreFunctions={IMG:restoreImg,IFRAME:restoreIframe,VIDEO:restoreVideo,};const restoreAttributes=function restoreAttributes(element){const restoreFunction=restoreFunctions[element.tagName];if(!restoreFunction){restoreOriginalBgImage(element);return}restoreFunction(element)};const resetClasses=function resetClasses(element,settings){if(hasEmptyStatus(element)||hasStatusNative(element)){return}removeClass(element,settings.class_entered);removeClass(element,settings.class_exited);removeClass(element,settings.class_applied);removeClass(element,settings.class_loading);removeClass(element,settings.class_loaded);removeClass(element,settings.class_error)};const restore=function restore(element,settings){restoreAttributes(element);resetClasses(element,settings);resetStatus(element);deleteOriginalAttrs(element)};const cancelLoading=function cancelLoading(element,entry,settings,instance){if(!settings.cancel_on_exit)return;if(!hasStatusLoading(element))return;if(element.tagName!=='IMG')return;removeEventListeners(element);resetSourcesImg(element);restoreImg(element);removeClass(element,settings.class_loading);updateLoadingCount(instance,-1);resetStatus(element);safeCallback(settings.callback_cancel,element,entry,instance)};const onEnter=function onEnter(element,entry,settings,instance){const dontLoad=hadStartedLoading(element);setStatus(element,statusEntered);addClass(element,settings.class_entered);removeClass(element,settings.class_exited);unobserveEntered(element,settings,instance);safeCallback(settings.callback_enter,element,entry,instance);if(dontLoad)return;load(element,settings,instance)};const onExit=function onExit(element,entry,settings,instance){if(hasEmptyStatus(element))return;addClass(element,settings.class_exited);cancelLoading(element,entry,settings,instance);safeCallback(settings.callback_exit,element,entry,instance)};const tagsWithNativeLazy=['IMG','IFRAME','VIDEO'];const shouldUseNative=function shouldUseNative(settings){return settings.use_native&&'loading'in HTMLImageElement.prototype};const loadAllNative=function loadAllNative(elements,settings,instance){elements.forEach((element)=>{if(tagsWithNativeLazy.indexOf(element.tagName)===-1){return}loadNative(element,settings,instance)});setToLoadCount(instance,0)};const isIntersecting=function isIntersecting(entry){return entry.isIntersecting||entry.intersectionRatio>0};const getObserverSettings=function getObserverSettings(settings){return{root:settings.container===document?null:settings.container,rootMargin:settings.thresholds||`${settings.threshold}px`,}};const intersectionHandler=function intersectionHandler(entries,settings,instance){entries.forEach((entry)=>(isIntersecting(entry)?onEnter(entry.target,entry,settings,instance):onExit(entry.target,entry,settings,instance)))};const observeElements=function observeElements(observer,elements){elements.forEach((element)=>{observer.observe(element)})};const updateObserver=function updateObserver(observer,elementsToObserve){resetObserver(observer);observeElements(observer,elementsToObserve)};const setObserver=function setObserver(settings,instance){if(!supportsIntersectionObserver||shouldUseNative(settings)){return}instance._observer=new IntersectionObserver((entries)=>{intersectionHandler(entries,settings,instance)},getObserverSettings(settings))};const toArray=function toArray(nodeSet){return Array.prototype.slice.call(nodeSet)};const queryElements=function queryElements(settings){return settings.container.querySelectorAll(settings.elements_selector)};const excludeManagedElements=function excludeManagedElements(elements){return toArray(elements).filter(hasEmptyStatus)};const hasError=function hasError(element){return hasStatusError(element)};const filterErrorElements=function filterErrorElements(elements){return toArray(elements).filter(hasError)};const getElementsToLoad=function getElementsToLoad(elements,settings){return excludeManagedElements(elements||queryElements(settings))};const retryLazyLoad=function retryLazyLoad(settings,instance){const errorElements=filterErrorElements(queryElements(settings));errorElements.forEach((element)=>{removeClass(element,settings.class_error);resetStatus(element)});instance.update()};const setOnlineCheck=function setOnlineCheck(settings,instance){if(!runningOnBrowser){return}window.addEventListener('online',()=>{retryLazyLoad(settings,instance)})};const LazyLoad=function LazyLoad(customSettings,elements){const settings=getExtendedSettings(customSettings);this._settings=settings;this.loadingCount=0;setObserver(settings,this);setOnlineCheck(settings,this);this.update(elements)};LazyLoad.prototype={update:function update(givenNodeset){const settings=this._settings;const elementsToLoad=getElementsToLoad(givenNodeset,settings);setToLoadCount(this,elementsToLoad.length);if(isBot||!supportsIntersectionObserver){this.loadAll(elementsToLoad);return}if(shouldUseNative(settings)){loadAllNative(elementsToLoad,settings,this);return}updateObserver(this._observer,elementsToLoad)},destroy:function destroy(){if(this._observer){this._observer.disconnect()}queryElements(this._settings).forEach((element)=>{deleteOriginalAttrs(element)});delete this._observer;delete this._settings;delete this.loadingCount;delete this.toLoadCount},loadAll:function loadAll(elements){const _this=this;const settings=this._settings;const elementsToLoad=getElementsToLoad(elements,settings);elementsToLoad.forEach((element)=>{unobserve(element,_this);load(element,settings,_this)})},restoreAll:function restoreAll(){const settings=this._settings;queryElements(settings).forEach((element)=>{restore(element,settings)})},};LazyLoad.load=function(element,customSettings){const settings=getExtendedSettings(customSettings);load(element,settings)};LazyLoad.resetStatus=function(element){resetStatus(element)};if(runningOnBrowser){autoInitialize(LazyLoad,window.lazyLoadOptions)}return LazyLoad});
/* end */